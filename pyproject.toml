# pyproject.toml for `nighthawk` pip package.
#
# To create a Python environment named `nighthawk-dev` in which to work
# on the `nighthawk` package:
#
#     conda create -n nighthawk-dev python=3.10
#     conda activate nighthawk-dev
#     pip install -e <nighthawk package dir path>
#     pip install build twine
#
# To build the `nighthawk` package, issue the following commands from
# within the directory containing this file:
#
#     conda activate nighthawk-dev
#     python -m build
#
# The build process will write package `.tar.gz` and `.whl` files to the
# `dist` subdirectory of the directory containing this file.
#
# To upload a built package to the test Python package index:
#
#     conda activate nighthawk-dev
#     python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*
#
# To upload a built package to the real Python package index:
#
#     conda activate nighthawk-dev
#     python -m twine upload dist/*

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nighthawk"
version = "0.1.0a0"
description = "Nighthawk avian nocturnal flight call detector"
readme = "README.md"
requires-python = "~=3.10.0"
license = {file = "LICENSE"}
authors = [
  {name = "Benjamin Van Doren", email = "vandoren@cornell.edu"},
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "jupyter",
    "librosa~=0.9.0",
    "pandas",
    "tensorflow~=2.11.0"
]

[project.urls]
"Bug Tracker" = "https://github.com/bmvandoren/nighthawk/issues"
"Source Code" = "https://github.com/bmvandoren/nighthawk"

[project.scripts]
nighthawk = "nighthawk.run_nighthawk:main"
